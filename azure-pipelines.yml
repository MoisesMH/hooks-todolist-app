# Node.js React Web App to Linux on Azure
# Build a Node.js React app and deploy it to Azure as a Linux web app.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
  branches:
    include:
      - main

variables:
  # Azure Resource Manager connection created during pipeline creation
  azureSubscription: '0c9ccb5a-239a-4bc1-ba6d-cfaf10231094'

  # Web app name
  webAppName: 'todolistapp1'

  # Environment name
  prodEnvironmentName: 'production'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

  # Self-hosted agent pool name
  agentpool: 'DockerPool_1'

stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: Build
    displayName: Build
    pool: $(agentpool)
    #  vmImage: $(vmImageName)

    steps:
    - task: CmdLine@2
      displayName: 'Update system, its dependencies and install zip utility.'
      inputs:
        script: |
          apt-get update \
              && apt-get install -y zip \
              && apt-get autoremove \
              && apt-get clean \
              && rm -rf /var/lib/apt/lists/*
    
    - task: NodeTool@0
      displayName: 'Set up Node.js 16.x.x LTS'
      inputs:
        versionSpec: '=16.x.x'
    
    # - script: |
    #     npm ci
    #     npm run build --if-present
    #   displayName: 'npm install, build'
    
    - task: Npm@1
      displayName: 'Installing dependencies'
      inputs:
        command: 'install'
        workingDir: '$(System.DefaultWorkingDirectory)'
    
    - task: Npm@1
      displayName: 'Build project to production'
      inputs:
        command: 'custom'
        workingDir: '$(System.DefaultWorkingDirectory)'
        customCommand: 'run build --if-present'

    - task: ArchiveFiles@2
      displayName: 'Archive files to publish folder'
      inputs:
        rootFolderOrFile: '$(System.DefaultWorkingDirectory)/build'
        includeRootFolder: false
        archiveType: zip
        archiveFile: $(System.DefaultWorkingDirectory)/build/$(Build.BuildId).zip
        replaceExistingArchive: true

    - task: CopyFiles@2
      displayName: 'Copy Files to Publish Artifacts Directory'
      inputs:
        SourceFolder: '$(System.DefaultWorkingDirectory)/build'
        Contents: '$(System.DefaultWorkingDirectory)/build/$(Build.BuildId).zip'
        TargetFolder: '$(Build.ArtifactStagingDirectory)'
        OverWrite: true
    
    # Deprecated
    # - upload: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
    #   artifact: drop
    
    - task: PublishPipelineArtifact@1
      displayName: 'Publish pipeline artifacts'
      inputs:
        targetPath: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
        artifact: '$(Build.BuildId)'
        publishLocation: 'pipeline'


- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build
  condition: succeeded()
  jobs:
  - deployment: Deploy
    displayName: Deploy
    environment: $(prodEnvironmentName)
    pool: $(agentpool)
    #   vmImage: $(vmImageName)
    strategy:
      runOnce:
        deploy:
          steps:
          - task: DownloadPipelineArtifact@2
            displayName: 'Download pipeline artifacts'
            inputs:
              buildType: 'current'
              artifactName: '$(Build.BuildId)'
              targetPath: '$(Pipeline.Workspace)'

          - task: AzureRmWebAppDeployment@4
            inputs:
              ConnectionType: 'AzureRM'
              azureSubscription: 'Azure for Students(0c9ccb5a-239a-4bc1-ba6d-cfaf10231094)'
              appType: 'webAppLinux'
              WebAppName: 'todolistapp1'
              packageForLinux: '$(Pipeline.Workspace)/$(Build.BuildId).zip'
              RuntimeStack: 'NODE|16-lts'
              StartupCommand: 'npm install -g serve && serve -s'